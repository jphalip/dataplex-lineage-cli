plugins {
    id 'java'
    id 'application'
    // Don't bump above 6.13 - it requires Java 11 https://github.com/diffplug/spotless/blob/main/plugin-gradle/CHANGES.md#changes-12
    id 'com.diffplug.spotless' version '6.13.0'
    id 'com.gradleup.shadow' version '8.3.3'
}

ext {
    lombokVersion = '1.18.32'
    picoCliVersion = '4.7.6'
    producerClientVersion = '1.0.0'
    cloudDataLineageVersion = '0.39.0'
    assertjVersion = '3.25.3'
    jupiterVersion = '5.11.2'
    slf4jVersion = '1.7.36'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    options.incremental = true
    options.compilerArgs << '-parameters'
    options.encoding = "UTF-8"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileTestJava {
    options.incremental = true
    options.compilerArgs << '-parameters'
    options.encoding = "UTF-8"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

application {
    mainClass = 'com.google.cloud.datacatalog.lineage.cli.DataplexLineageCLI'
}

test {
    useJUnitPlatform()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "info.picocli:picocli-codegen:${picoCliVersion}"
    implementation "info.picocli:picocli:${picoCliVersion}"
    implementation "com.google.cloud.datalineage:producerclient-java8:${producerClientVersion}"
    implementation "com.google.cloud:google-cloud-datalineage:${cloudDataLineageVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
}

test {
    useJUnitPlatform()
}



apply plugin: 'java'
apply plugin: 'com.diffplug.spotless'

repositories {
    mavenCentral()
    mavenLocal()
}

spotless {
    java {
        target("src/**/*.java")
        googleJavaFormat()
        removeUnusedImports()
        licenseHeader("""/*
* Copyright \$YEAR Google Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/""")
    }
}

// Shading ---------------------------------------------------------------------------------------

apply plugin: 'com.gradleup.shadow'

shadowJar {
    archiveClassifier.set('')
    doFirst {
        println "Files to be included in shadow jar:"
        inputs.files.each { println it }
    }

    zip64 true

    exclude 'module-info.class'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'

    // Relocate some packages
    [
            'com.google.common',
            'com.google.protobuf',
    ].each { pkg ->
        relocate pkg, "dataplex.lineage.cli.repackaged.${pkg}"
    }

    mergeServiceFiles()
}